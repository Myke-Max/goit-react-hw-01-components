{"version":3,"sources":["components/profile/Profile.js","components/statisticList/StatisticList.js","components/friends-list/FriendList.js","components/transaction/TransactionHistory.js","App.jsx","index.js"],"names":["Profile","avatar","name","tag","location","followers","views","likes","className","src","alt","width","StatisticList","title","stats","map","id","label","percentage","protoTypes","PropTypes","arrayOf","shape","string","isRequired","number","FriendList","friends","isOnline","TransactionHistory","items","console","log","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById","querySelector"],"mappings":"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","file":"static/js/main.4c90a61c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport '../profile/profile.css';\n\nexport default function Profile({ avatar, name, tag, location, followers, views, likes }) {\n  return (\n    <div className=\"profile\">\n      <div className=\"profile__wrapper\">\n        <div className=\"description\">\n          <img src={avatar} alt={avatar} className=\"avatar\" width=\"200\" />\n          <p className=\"name\">{name}</p>\n          <p className=\"tag\">{tag}</p>\n          <p className=\"location\">{location}</p>\n        </div>\n\n        <ul className=\"stats\">\n          <li className=\"stats-item\">\n            <span className=\"label\">Followers</span>\n            <span className=\"quantity\">{followers}</span>\n          </li>\n          <li className=\"stats-item\">\n            <span className=\"label\">Views</span>\n            <span className=\"quantity\">{views}</span>\n          </li>\n          <li className=\"stats-item\">\n            <span className=\"label\">Likes</span>\n            <span className=\"quantity\">{likes}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport '../statisticList/statistics.css';\n\nexport default function StatisticList({ title, stats }) {\n  return (\n    <section className=\"statistics\">\n      {title && <h2 className=\"title\">{title}</h2>}\n\n      <ul className=\"stat-list\">\n        {stats.map(({ id, label, percentage }) => (\n          <li className=\"item\" key={id}>\n            <span className=\"label\">{label}</span>\n            <span className=\"percentage\">{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatisticList.protoTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport '../friends-list/friends.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <section>\n      <ul className=\"friend-list\">\n        {friends.map(({ avatar, name, isOnline, id }) => (\n          <li className=\"item\" key={id}>\n            {isOnline ? (\n              <span className=\"status\"></span>\n            ) : (\n              <span className=\"status offline \"></span>\n            )}\n\n            <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n            <p className=\"name\">{name}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport '../transaction/transaction.css';\n\nexport default function TransactionHistory({ items }) {\n  console.log(items);\n  return (\n    <table className=\"transaction-history\">\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td> {type} </td>\n            <td> {amount} </td>\n            <td> {currency} </td>\n          </tr>\n        ))}\n      </thead>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import Profile from './components/profile/Profile';\nimport StatisticList from './components/statisticList/StatisticList';\nimport FriendList from './components/friends-list/FriendList';\nimport TransactionHistory from './components/transaction/TransactionHistory';\n\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nconsole.log(transactions);\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <Profile\n        avatar={user.avatar}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <StatisticList title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}